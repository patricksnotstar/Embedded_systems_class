GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from noworky...
(gdb) target remote 192.168.7.2:2001
Remote debugging using 192.168.7.2:2001
Reading /lib/ld-linux-armhf.so.3 from remote target...
warning: File transfers from remote targets can be slow. Use "set sysroot" to access files locally instead.
Reading /lib/ld-linux-armhf.so.3 from remote target...
Reading symbols from target:/lib/ld-linux-armhf.so.3...
Reading /lib/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /lib/.debug/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /usr/lib/debug//lib/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /usr/lib/debug/lib//867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading target:/usr/lib/debug/lib//867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
(No debugging symbols found in target:/lib/ld-linux-armhf.so.3)
0xb6fd7980 in ?? () from target:/lib/ld-linux-armhf.so.3
(gdb) list 
39	    unsigned int i;
40	    for (i = 0; i < size; i++)
41	    {
42	        printf("%3d: %05.1f --> %05.1f\n", i, source[i], target[i]);
43	    }
44	}
45	
46	/*
47	 * Create two arrays; populate them; swap them; display them.
48	 */
(gdb) next
Cannot find bounds of current function
(gdb) frame
#0  0xb6fd7980 in ?? () from target:/lib/ld-linux-armhf.so.3
(gdb) list
49	int main()
50	{
51	    unsigned int i;
52	    double *source, *target;
53	    printf("noworky: by Brian Fraser\n");
54	
55	    // Allocate the arrays:
56	    source = malloc(sizeof(*source) * NUM_ELEMENTS);
57	    target = malloc(sizeof(*target) * NUM_ELEMENTS);
58	
(gdb) list
59	    if (!source || !target)
60	    {
61	        printf("ERROR: Allocation failed.\n");
62	    }
63	
64	    // Initialize the arrays
65	    for (i = 0; i < NUM_ELEMENTS; i++)
66	    {
67	        source[i] = i * 2.0;
68	        target[i] = i * 10.0;
(gdb) list
69	    }
70	
71	    // Display them
72	    printf("Initial values: \n");
73	    displayArrays(source, target, NUM_ELEMENTS);
74	
75	    // Swap their contents
76	    tradeArrays(source, target, NUM_ELEMENTS);
77	
78	    // Display them
(gdb) list
79	    printf("Final values: \n");
80	    displayArrays(source, target, NUM_ELEMENTS);
81	
82	    // Clean up.
83	    free(source);
84	    free(target);
85	
86	    printf("Done.\n");
87	
88	    return 0;
(gdb) list
89	}
(gdb) list
Line number 90 out of range; noworky.c has 89 lines.
(gdb) list
Line number 90 out of range; noworky.c has 89 lines.
(gdb) list
Line number 90 out of range; noworky.c has 89 lines.
(gdb) list
Line number 90 out of range; noworky.c has 89 lines.
(gdb) up
#1  0x00000000 in ?? ()
(gdb) up
Initial frame selected; you cannot go up.
(gdb) break main
Breakpoint 1 at 0x400656: file noworky.c, line 53.
(gdb) list
Line number 90 out of range; noworky.c has 89 lines.
(gdb) frame
#1  0x00000000 in ?? ()
(gdb) continue
Continuing.
Reading /lib/arm-linux-gnueabihf/libc.so.6 from remote target...
Reading /lib/arm-linux-gnueabihf/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /lib/arm-linux-gnueabihf/.debug/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /usr/lib/debug//lib/arm-linux-gnueabihf/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /usr/lib/debug/lib/arm-linux-gnueabihf//ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading target:/usr/lib/debug/lib/arm-linux-gnueabihf//ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...

Breakpoint 1, main () at noworky.c:53
53	    printf("noworky: by Brian Fraser\n");
(gdb) continue
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x004005b6 in swapContent (d1=0x410ff8, d2=0x411050) at noworky.c:19
19	    *d1 = tmp;
(gdb) continue
Continuing.

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
(gdb) target remote 192.168.7.2:2001
Remote debugging using 192.168.7.2:2001
Reading /lib/ld-linux-armhf.so.3 from remote target...
Reading /lib/ld-linux-armhf.so.3 from remote target...
Reading symbols from target:/lib/ld-linux-armhf.so.3...
Reading /lib/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /lib/.debug/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /usr/lib/debug//lib/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /usr/lib/debug/lib//867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading target:/usr/lib/debug/lib//867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
(No debugging symbols found in target:/lib/ld-linux-armhf.so.3)

Program received signal SIGTRAP, Trace/breakpoint trap.
0xb6fd7980 in ?? () from target:/lib/ld-linux-armhf.so.3
(gdb) break main
Note: breakpoint 1 also set at pc 0x400656.
Breakpoint 2 at 0x400656: file noworky.c, line 53.
(gdb) step
Cannot find bounds of current function
(gdb) frame
#0  0xb6fd7980 in ?? () from target:/lib/ld-linux-armhf.so.3
(gdb) break 51
Note: breakpoints 1 and 2 also set at pc 0x400656.
Breakpoint 3 at 0x400656: file noworky.c, line 53.
(gdb) continue
Continuing.
Reading /lib/arm-linux-gnueabihf/libc.so.6 from remote target...
Reading /lib/arm-linux-gnueabihf/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /lib/arm-linux-gnueabihf/.debug/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /usr/lib/debug//lib/arm-linux-gnueabihf/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /usr/lib/debug/lib/arm-linux-gnueabihf//ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading target:/usr/lib/debug/lib/arm-linux-gnueabihf//ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...

Breakpoint 1, main () at noworky.c:53
53	    printf("noworky: by Brian Fraser\n");
(gdb) step
56	    source = malloc(sizeof(*source) * NUM_ELEMENTS);
(gdb) step
57	    target = malloc(sizeof(*target) * NUM_ELEMENTS);
(gdb) step
59	    if (!source || !target)
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
67	        source[i] = i * 2.0;
(gdb) step
68	        target[i] = i * 10.0;
(gdb) step
65	    for (i = 0; i < NUM_ELEMENTS; i++)
(gdb) step
72	    printf("Initial values: \n");
(gdb) step
73	    displayArrays(source, target, NUM_ELEMENTS);
(gdb) step
displayArrays (source=0x412410, target=0x412468, size=10) at noworky.c:40
40	    for (i = 0; i < size; i++)
(gdb) step
42	        printf("%3d: %05.1f --> %05.1f\n", i, source[i], target[i]);
(gdb) step
40	    for (i = 0; i < size; i++)
(gdb) step
42	        printf("%3d: %05.1f --> %05.1f\n", i, source[i], target[i]);
(gdb) continue
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x004005b6 in swapContent (d1=0x410ff8, d2=0x411050) at noworky.c:19
19	    *d1 = tmp;
(gdb) break 17
Breakpoint 4 at 0x40059a: file noworky.c, line 17.
(gdb) break 28
Breakpoint 5 at 0x4005d2: file noworky.c, line 28.
(gdb) continue
Continuing.

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
(gdb) target remote 192.168.7.2:2001
Remote debugging using 192.168.7.2:2001
Reading /lib/ld-linux-armhf.so.3 from remote target...
Reading /lib/ld-linux-armhf.so.3 from remote target...
Reading symbols from target:/lib/ld-linux-armhf.so.3...
Reading /lib/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /lib/.debug/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /usr/lib/debug//lib/867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading /usr/lib/debug/lib//867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
Reading target:/usr/lib/debug/lib//867309c1cc14ae392683da6c69aa2e46749280.debug from remote target...
(No debugging symbols found in target:/lib/ld-linux-armhf.so.3)

Program received signal SIGTRAP, Trace/breakpoint trap.
0xb6fd7980 in ?? () from target:/lib/ld-linux-armhf.so.3
(gdb) info breakpoints
Num     Type           Disp Enb Address    What
1       breakpoint     keep y   0x00400656 in main at noworky.c:53
	breakpoint already hit 2 times
2       breakpoint     keep y   0x00400656 in main at noworky.c:53
	breakpoint already hit 1 time
3       breakpoint     keep y   0x00400656 in main at noworky.c:53
	breakpoint already hit 1 time
4       breakpoint     keep y   0x0040059a in swapContent at noworky.c:17
5       breakpoint     keep y   0x004005d2 in tradeArrays at noworky.c:28
(gdb) delete 1
(gdb) delete 2
(gdb) delete 3
(gdb) continue
Continuing.
Reading /lib/arm-linux-gnueabihf/libc.so.6 from remote target...
Reading /lib/arm-linux-gnueabihf/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /lib/arm-linux-gnueabihf/.debug/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /usr/lib/debug//lib/arm-linux-gnueabihf/ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading /usr/lib/debug/lib/arm-linux-gnueabihf//ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...
Reading target:/usr/lib/debug/lib/arm-linux-gnueabihf//ec26854959c82cdd49ebbddfcff38ff8ee64ba.debug from remote target...

Breakpoint 5, tradeArrays (array1=0x412410, array2=0x412468, size=10)
    at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412458, d2=0x4124b0) at noworky.c:17
17	    double tmp = *d2;
(gdb) print tmp
$1 = 18
(gdb) step
18	    *d2 = *d1;
(gdb) print d2
$2 = (double *) 0x4124b0
(gdb) print *d2
$3 = 90
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412450, d2=0x4124a8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412448, d2=0x4124a0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412440, d2=0x412498) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412438, d2=0x412490) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412430, d2=0x412488) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412428, d2=0x412480) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412420, d2=0x412478) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x412418, d2=0x412470) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412410, d2=0x412468) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412408, d2=0x412460) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x412400, d2=0x412458) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123f8, d2=0x412450) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x4123f0, d2=0x412448) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x4123e8, d2=0x412440) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123e0, d2=0x412438) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123d8, d2=0x412430) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123d0, d2=0x412428) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123c8, d2=0x412420) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123c0, d2=0x412418) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123b8, d2=0x412410) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x4123b0, d2=0x412408) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x4123a8, d2=0x412400) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x4123a0, d2=0x4123f8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412398, d2=0x4123f0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412390, d2=0x4123e8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x412388, d2=0x4123e0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412380, d2=0x4123d8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412378, d2=0x4123d0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x412370, d2=0x4123c8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

^[[ABreakpoint 4, swapContent (d1=0x412368, d2=0x4123c0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x412360, d2=0x4123b8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412358, d2=0x4123b0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x412350, d2=0x4123a8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
^[[A19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412348, d2=0x4123a0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412340, d2=0x412398) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
^[[AtradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
^[[A30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

^[[ABreakpoint 4, swapContent (d1=0x412338, d2=0x412390) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412330, d2=0x412388) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x412328, d2=0x412380) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x412320, d2=0x412378) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412318, d2=0x412370) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412310, d2=0x412368) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412308, d2=0x412360) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x412300, d2=0x412358) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
^[[A19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
^[[AtradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x4122f8, d2=0x412350) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
^[[A19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
^[[AtradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
^[[A30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122f0, d2=0x412348) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122e8, d2=0x412340) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122e0, d2=0x412338) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122d8, d2=0x412330) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
^[[A19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122d0, d2=0x412328) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x4122c8, d2=0x412320) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122c0, d2=0x412318) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A
Breakpoint 4, swapContent (d1=0x4122b8, d2=0x412310) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x4122b0, d2=0x412308) at noworky.c:17
17	    double tmp = *d2;
(gdb) print tmp
$4 = 10
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step
^[[A

Breakpoint 4, swapContent (d1=0x4122a8, d2=0x412300) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) print i
$5 = 4294967251
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x4122a0, d2=0x4122f8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) print i
$9 = 4294967250
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412298, d2=0x4122f0) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) print i
$10 = 4294967249
(gdb) step
30	        swapContent(array1 + i, array2 + i);
(gdb) step

Breakpoint 4, swapContent (d1=0x412290, d2=0x4122e8) at noworky.c:17
17	    double tmp = *d2;
(gdb) step
18	    *d2 = *d1;
(gdb) step
19	    *d1 = tmp;
(gdb) step
20	}
(gdb) step
tradeArrays (array1=0x412410, array2=0x412468, size=10) at noworky.c:28
28	    for (i = size - 1; i >= 0; i--)
(gdb) print i
$11 = 4294967248
(gdb) quit
A debugging session is active.

	Inferior 1 [process 2904] will be killed.

Quit anyway? (y or n) y

